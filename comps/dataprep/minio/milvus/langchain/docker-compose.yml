# Copyright (c) 2015-2024 MinIO, Inc.
# SPDX-License-Identifier: Apache-2.0

version: '3.5'

services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:latest
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "5044:9001"
      - "5043:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-setup:
    container_name: minio-mc
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
      dataprep-milvus-service:
        condition: service_started

    environment:
      MINIO_URL: ${MINIO_URL:-http://minio:9000}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
      DOCUMENT_WEBHOOK_URL: ${DOCUMENT_WEBHOOK_URL:-http://dataprep-milvus-service:6010/v1/minio/document/notification}
      METADATA_WEBHOOK_URL: ${METADATA_WEBHOOK_URL:-http://dataprep-milvus-service:6010/v1/minio/metadata/notification}
    entrypoint:
      - /bin/sh
      - -c
      - |
        set -x;
        mc alias set myminio $${MINIO_URL} $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD};

        # Create buckets
        mc mb --ignore-existing myminio/document;
        mc mb --ignore-existing myminio/warehouse;
        echo 'Created Buckets';
        # Configure webhooks
        mc admin config set myminio notify_webhook:document_notify endpoint=\"$${DOCUMENT_WEBHOOK_URL}\";
        mc admin config set myminio notify_webhook:metadata_notify endpoint=\"$${METADATA_WEBHOOK_URL}\";
        echo 'Webhooks setup successfully';

        # Restart MinIO to apply webhook configurations
        mc admin service restart myminio --quiet --json;
        echo 'MinIO Service Restarted'
        # Wait for MinIO to come back up
        sleep 10;

        # Configure event notifications
        mc event add myminio/document arn:minio:sqs::document_notify:webhook --event put,delete;
        mc event add myminio/warehouse --prefix metadata --suffix .msgpack arn:minio:sqs::metadata_notify:webhook --event put,delete;

        echo 'MinIO setup completed successfully!';

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.4.9
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
      - ${DOCKER_VOLUME_DIRECTORY:-.}/milvus.yaml:/milvus/configs/milvus.yaml
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  dataprep-milvus-service:
    image: opea/dataprep-minio-milvus:0.1
    container_name: dataprep-milvus-server
    depends_on:
      - standalone
    ports:
      - "6010:6010"
    volumes:
      - "./prepare_doc_milvus.py:/home/user/comps/dataprep/minio/milvus/langchain/prepare_doc_milvus.py"
      - "../../minio_schema.py:/home/user/comps/dataprep/minio/minio_schema.py"
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      MILVUS_HOST: http://standalone
      MILVUS_PORT: 19530
      MINIO_ENDPOINT: minio:9000
      COLLECTION_NAME: ${INDEX_NAME:-milvus_db}

networks:
  default:
    name: milvus
